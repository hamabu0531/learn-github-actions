name: C CI


on:
  push:
    branches: [main]
   #schedule:
    # - cron: '* */1 * * *' # 1時間ごと


jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      SAMPLE: ${{ secrets.SAMPLE_SECRET_VALUE}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Repository Info
        id: repo-info
        uses: actions/github-script@v6
        with:
          script: |
            return {
              owner: context.repo.owner,
              name: context.repo.repo
            }

      - name: Display Repository Info
        run: |
          echo "Repository Owner: ${{ steps.repo-info.outputs.result }}"

      - name: Verify Sample Secret Value
        run: |
          echo "Sample Secret Value: $SAMPLE"
          if [ -z "$SAMPLE" ]; then
            echo "Error: SAMPLE_SECRET_VALUE is not set in secrets."
            exit 1
          fi

      - name: Install dependencies
        run: |
          sudo apt-get update
        # sudo apt-get install -y build-essential

      - name: Step that may fail
        id: process
        continue-on-error: true
        run: |
          echo "Attempting risky operation..."
          exit 1

      - name: Display Warning
        if: steps.process.outcome == 'failure' && steps.process.conclusion == 'success'
        run: echo "::warning::Process completed with warnings."

      - name: Build
        working-directory: ./C
        run: |
          gcc -o mymath_test ./src/mymath.c ./tests/test_mymath.c

      - name: Upload Data
        uses: actions/upload-artifact@v4
        with:
          name: test_file
          path: ./C/  # アップロードするファイルやディレクトリのパス


  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Data
        uses: actions/download-artifact@v4
        with:
          name: test_file
          path: .  # 展開先のパス

      - name: Run tests
        run: |
          ./mymath_test


  # テストが通らないケース
  # build-fail:
  #   name: Build and Test with Failure
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y build-essential

  #     - name: Build with failure
  #       run: |
  #         gcc -Wall -Wextra -o mymath_test ./C/src/mymath_fail.c ./C/tests/test_mymath.c

  #     - name: Run tests
  #       run: |
  #         ./mymath_test


  report-success:
    needs: test
    runs-on: ubuntu-latest
    env:
      SUCCESS_MESSAGE: "comment=Build and tests passed!"
    if: success()
    steps:
      - name: Set Comment
        id: set-comment
        run: echo "$SUCCESS_MESSAGE" >> $GITHUB_OUTPUT

      - name: Send Success Notification
        run: echo '${{ steps.set-comment.outputs.comment }}' # steps.<step-id>.outputs.<parameter-name>


  report-failure:
    needs: test
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Send Failure Notification
        run: echo 'Build and tests failed!'

  report-always:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Always Notification
        run: echo 'This runs anyway.'